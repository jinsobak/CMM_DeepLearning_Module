import numpy as np
import pandas as pd

def sample_data(num_samples=10):
    측정값_평면1_평면도 = np.round(np.random.uniform(0, 0.004, num_samples), 3)
    기준값_평면1_평면도 = np.random.choice([0.1, 0.2], num_samples)
    상한공차_평면1_평면도 = np.full(num_samples, 0.1)
    하한공차_평면1_평면도 = np.full(num_samples, 0)
    편차_평면1_평면도 = 기준값_평면1_평면도 - 측정값_평면1_평면도
    
    return (측정값_평면1_평면도, 기준값_평면1_평면도, 상한공차_평면1_평면도, 하한공차_평면1_평면도, 편차_평면1_평면도)

def additional_sample_data(num_samples=10):
    측정값_원1_I_D = np.round(np.random.uniform(16.465, 16.509, num_samples), 3)
    기준값_원1_I_D = np.random.choice([16.48, 16.485], num_samples)
    상한공차_원1_I_D = np.full(num_samples, 0.03)
    하한공차_원1_I_D = np.round(np.random.uniform(-0.01, 0, num_samples), 3)
    편차_원1_I_D = 기준값_원1_I_D - 측정값_원1_I_D

    측정값_원2_I_D = np.round(np.random.uniform(16.457, 16.514, num_samples), 3)
    기준값_원2_I_D = np.round(np.random.uniform(16.48, 16.485, num_samples), 3)
    상한공차_원2_I_D = np.full(num_samples, 0.03)
    하한공차_원2_I_D = np.round(np.random.uniform(-0.01, 0, num_samples), 3)
    편차_원2_I_D = 기준값_원2_I_D - 측정값_원2_I_D

    측정값_원3_I_D = np.round(np.random.uniform(16.466, 16.509, num_samples), 3)
    기준값_원3_I_D = np.round(np.random.uniform(16.48, 16.485, num_samples), 3)
    상한공차_원3_I_D = np.full(num_samples, 0.03)
    하한공차_원3_I_D = np.round(np.random.uniform(-0.01, 0, num_samples), 3)
    편차_원3_I_D = 기준값_원3_I_D - 측정값_원3_I_D

    측정값_원통1_I_D = np.round(np.random.uniform(16.465, 16.51, num_samples), 3)
    기준값_원통1_I_D = np.round(np.random.uniform(16.48, 16.485, num_samples), 3)
    상한공차_원통1_I_D = np.full(num_samples, 0.03)
    하한공차_원통1_I_D = np.round(np.random.uniform(-0.01, 0, num_samples), 3)
    편차_원통1_I_D = 기준값_원통1_I_D - 측정값_원통1_I_D

    측정값_원통1_I_직각도 = np.round(np.random.uniform(0.001, 0.117, num_samples), 3)
    기준값_원통1_I_직각도 = np.full(num_samples, 0.05)
    상한공차_원통1_I_직각도 = np.full(num_samples, 0.05)
    하한공차_원통1_I_직각도 = np.full(num_samples, 0)
    편차_원통1_I_직각도 = 측정값_원통1_I_직각도 - 기준값_원통1_I_직각도

    측정값_점2_X = np.round(np.random.uniform(116.54, 116.747, num_samples), 3)
    기준값_점2_X = np.full(num_samples, 116.6)
    상한공차_점2_X = np.full(num_samples, 0.1)
    하한공차_점2_X = np.full(num_samples, 0)
    편차_점2_X = 측정값_점2_X - 기준값_점2_X

    측정값_점2_Y = np.round(np.random.uniform(-10.914, -10.894, num_samples), 3)
    기준값_점2_Y = np.full(num_samples, -10.9)
    상한공차_점2_Y = np.full(num_samples, 0.1)
    하한공차_점2_Y = np.full(num_samples, -0.1)
    편차_점2_Y = 측정값_점2_Y - 기준값_점2_Y

    측정값_각도1 = np.round(np.random.uniform(55.365, 57.486, num_samples), 3)
    기준값_각도1 = np.full(num_samples, 57)
    상한공차_각도1 = np.full(num_samples, 0.333)
    하한공차_각도1 = np.full(num_samples, -0.333)
    편차_각도1 = 측정값_각도1 - 기준값_각도1

    측정값_직선4 = np.round(np.random.uniform(26.939, 27.389, num_samples), 3)
    기준값_직선4 = np.full(num_samples, 27)
    상한공차_직선4 = np.full(num_samples, 0.5)
    하한공차_직선4 = np.full(num_samples, -0.5)
    편차_직선4 = 측정값_직선4 - 기준값_직선4

    측정값_직선5 = np.round(np.random.uniform(7.354, 7.98, num_samples), 3)
    기준값_직선5 = np.full(num_samples, 7.5)
    상한공차_직선5 = np.full(num_samples, 0.5)
    하한공차_직선5 = np.full(num_samples, -0.5)
    편차_직선5 = 기준값_직선5 - 측정값_직선5

    측정값_점3 = np.round(np.random.uniform(109.91, 110.133, num_samples), 3)
    기준값_점3 = np.full(num_samples, 110.2)
    상한공차_점3 = np.full(num_samples, 0.3)
    하한공차_점3 = np.full(num_samples, -0.3)
    편차_점3 = 기준값_점3 - 측정값_점3

    측정값_직선6 = np.round(np.random.uniform(35.397, 36.16, num_samples), 3)
    기준값_직선6 = np.full(num_samples, 35.9)
    상한공차_직선6 = np.full(num_samples, 0.5)
    하한공차_직선6 = np.full(num_samples, -0.5)
    편차_직선6 = 기준값_직선6 - 측정값_직선6

    측정값_점4_X = np.round(np.random.uniform(87.709, 88.066, num_samples), 3)
    기준값_점4_X = np.full(num_samples, 88)
    상한공차_점4_X = np.full(num_samples, 0.3)
    하한공차_점4_X = np.full(num_samples, -0.3)
    편차_점4_X = 기준값_점4_X - 측정값_점4_X

    측정값_점4_Y = np.round(np.random.uniform(-24.437, 24.21, num_samples), 3)
    기준값_점4_Y = np.full(num_samples, -24)
    상한공차_점4_Y = np.full(num_samples, 0.3)
    하한공차_점4_Y = np.full(num_samples, -0.3)
    편차_점4_Y = 기준값_점4_Y - 측정값_점4_Y

    측정값_직선7 = np.round(np.random.uniform(-23.437, 23.1, num_samples), 3)
    기준값_직선7 = np.full(num_samples, -23.1)
    상한공차_직선7 = np.full(num_samples, 0.5)
    하한공차_직선7 = np.full(num_samples, -0.5)
    편차_직선7 = 기준값_직선7 - 측정값_직선7

    측정값_직선8 = np.round(np.random.uniform(-6.278, -6.1, num_samples), 3)
    기준값_직선8 = np.full(num_samples, -6)
    상한공차_직선8 = np.full(num_samples, 0.5)
    하한공차_직선8 = np.full(num_samples, -0.5)
    편차_직선8 = 기준값_직선8 - 측정값_직선8

    측정값_점5_X = np.round(np.random.uniform(47.822, 48.103, num_samples), 3)
    기준값_점5_X = np.full(num_samples, 48)
    상한공차_점5_X = np.full(num_samples, 0.3)
    하한공차_점5_X = np.full(num_samples, -0.3)
    편차_점5_X = 기준값_점5_X - 측정값_점5_X

    측정값_점5_Y = np.round(np.random.uniform(-16.363, -16.182, num_samples), 3)
    기준값_점5_Y = np.full(num_samples, -16.1)
    상한공차_점5_Y = np.full(num_samples, 0.3)
    하한공차_점5_Y = np.full(num_samples, -0.3)
    편차_점5_Y = 기준값_점5_Y - 측정값_점5_Y

    측정값_원4_X = np.round(np.random.uniform(-0.079, 0.08, num_samples), 3)
    기준값_원4_X = np.full(num_samples, 0)
    상한공차_원4_X = np.full(num_samples, 0.2)
    하한공차_원4_X = np.full(num_samples, -0.2)
    편차_원4_X = 기준값_원4_X - 측정값_원4_X

    측정값_원4_E_소재_Y = np.round(np.random.uniform(-0.006, 0.239, num_samples), 3)
    기준값_원4_E_소재_Y = np.full(num_samples, 0)
    상한공차_원4_E_소재_Y = np.full(num_samples, 0.2)
    하한공차_원4_E_소재_Y = np.full(num_samples, -0.2)
    편차_원4_E_소재_Y = np.round(np.random.uniform(0, 0.239, num_samples), 3)

    측정값_원4_E_소재_D = np.round(np.random.uniform(25.653, 25.732, num_samples), 3)
    기준값_원4_E_소재_D = np.full(num_samples, 26.1)
    상한공차_원4_E_소재_D = np.full(num_samples, 0)
    하한공차_원4_E_소재_D = np.full(num_samples, -0.5)
    편차_원4_E_소재_D = np.round(np.random.uniform(-0.447, -0.368, num_samples), 3)

    측정값_점6_소재_X = np.round(np.random.uniform(44.059, 44.303, num_samples), 3)
    기준값_점6_소재_X = np.full(num_samples, 44.1)
    상한공차_점6_소재_X = np.full(num_samples, 0.3)
    하한공차_점6_소재_X = np.full(num_samples, -0.3)
    편차_점6_소재_X = np.round(np.random.uniform(-0.041, 0.203, num_samples), 3)

    측정값_점6_소재_Y = np.round(np.random.uniform(6.514, 6.725, num_samples), 3)
    기준값_점6_소재_Y = np.full(num_samples, 6.5)
    상한공차_점6_소재_Y = np.full(num_samples, 0.3)
    하한공차_점6_소재_Y = np.full(num_samples, -0.3)
    편차_점6_소재_Y = np.round(np.random.uniform(0.014, 0.225, num_samples), 3)
    
    return (측정값_원1_I_D, 기준값_원1_I_D, 상한공차_원1_I_D, 하한공차_원1_I_D, 편차_원1_I_D,
            측정값_원2_I_D, 기준값_원2_I_D, 상한공차_원2_I_D, 하한공차_원2_I_D, 편차_원2_I_D,
            측정값_원3_I_D, 기준값_원3_I_D, 상한공차_원3_I_D, 하한공차_원3_I_D, 편차_원3_I_D,
            측정값_원통1_I_D, 기준값_원통1_I_D, 상한공차_원통1_I_D, 하한공차_원통1_I_D, 편차_원통1_I_D,
            측정값_원통1_I_직각도, 기준값_원통1_I_직각도, 상한공차_원통1_I_직각도, 하한공차_원통1_I_직각도, 편차_원통1_I_직각도,
            측정값_점2_X, 기준값_점2_X, 상한공차_점2_X, 하한공차_점2_X, 편차_점2_X,
            측정값_점2_Y, 기준값_점2_Y, 상한공차_점2_Y, 하한공차_점2_Y, 편차_점2_Y,
            측정값_각도1, 기준값_각도1, 상한공차_각도1, 하한공차_각도1, 편차_각도1,
            측정값_직선4, 기준값_직선4, 상한공차_직선4, 하한공차_직선4, 편차_직선4,
            측정값_직선5, 기준값_직선5, 상한공차_직선5, 하한공차_직선5, 편차_직선5,
            측정값_점3, 기준값_점3, 상한공차_점3, 하한공차_점3, 편차_점3,
            측정값_직선6, 기준값_직선6, 상한공차_직선6, 하한공차_직선6, 편차_직선6,
            측정값_점4_X, 기준값_점4_X, 상한공차_점4_X, 하한공차_점4_X, 편차_점4_X,
            측정값_점4_Y, 기준값_점4_Y, 상한공차_점4_Y, 하한공차_점4_Y, 편차_점4_Y,
            측정값_직선7, 기준값_직선7, 상한공차_직선7, 하한공차_직선7, 편차_직선7,
            측정값_직선8, 기준값_직선8, 상한공차_직선8, 하한공차_직선8, 편차_직선8,
            측정값_점5_X, 기준값_점5_X, 상한공차_점5_X, 하한공차_점5_X, 편차_점5_X,
            측정값_점5_Y, 기준값_점5_Y, 상한공차_점5_Y, 하한공차_점5_Y, 편차_점5_Y,
            측정값_원4_X, 기준값_원4_X, 상한공차_원4_X, 하한공차_원4_X, 편차_원4_X,
            측정값_원4_E_소재_Y, 기준값_원4_E_소재_Y, 상한공차_원4_E_소재_Y, 하한공차_원4_E_소재_Y, 편차_원4_E_소재_Y,
            측정값_원4_E_소재_D, 기준값_원4_E_소재_D, 상한공차_원4_E_소재_D, 하한공차_원4_E_소재_D, 편차_원4_E_소재_D,
            측정값_점6_소재_X, 기준값_점6_소재_X, 상한공차_점6_소재_X, 하한공차_점6_소재_X, 편차_점6_소재_X,
            측정값_점6_소재_Y, 기준값_점6_소재_Y, 상한공차_점6_소재_Y, 하한공차_점6_소재_Y, 편차_점6_소재_Y)


# 데이터 샘플링
num_samples = 10
측정값_평면1_평면도1, 기준값_평면1_평면도, 상한공차_평면1_평면도, 하한공차_평면1_평면도, 편차_평면1_평면도 =sample_data(num_samples)
(측정값_원1_I_D, 기준값_원1_I_D, 상한공차_원1_I_D, 하한공차_원1_I_D, 편차_원1_I_D,
 측정값_원2_I_D, 기준값_원2_I_D, 상한공차_원2_I_D, 하한공차_원2_I_D, 편차_원2_I_D,
 측정값_원3_I_D, 기준값_원3_I_D, 상한공차_원3_I_D, 하한공차_원3_I_D, 편차_원3_I_D,
 측정값_원통1_I_D, 기준값_원통1_I_D, 상한공차_원통1_I_D, 하한공차_원통1_I_D, 편차_원통1_I_D,
 측정값_원통1_I_직각도, 기준값_원통1_I_직각도, 상한공차_원통1_I_직각도, 하한공차_원통1_I_직각도, 편차_원통1_I_직각도,
 측정값_점2_X, 기준값_점2_X, 상한공차_점2_X, 하한공차_점2_X, 편차_점2_X,
 측정값_점2_Y, 기준값_점2_Y, 상한공차_점2_Y, 하한공차_점2_Y, 편차_점2_Y,
 측정값_각도1, 기준값_각도1, 상한공차_각도1, 하한공차_각도1, 편차_각도1,
 측정값_직선4, 기준값_직선4, 상한공차_직선4, 하한공차_직선4, 편차_직선4,
 측정값_평면1_평면도, 기준값_평면1_평면도, 상한공차_평면1_평면도, 하한공차_평면1_평면도, 편차_평면1_평면도,
 측정값_직선5, 기준값_직선5, 상한공차_직선5, 하한공차_직선5, 편차_직선5,
 측정값_점3, 기준값_점3, 상한공차_점3, 하한공차_점3, 편차_점3,
 측정값_직선6, 기준값_직선6, 상한공차_직선6, 하한공차_직선6, 편차_직선6,
 측정값_점4_X, 기준값_점4_X, 상한공차_점4_X, 하한공차_점4_X, 편차_점4_X,
 측정값_점4_Y, 기준값_점4_Y, 상한공차_점4_Y, 하한공차_점4_Y, 편차_점4_Y,
 측정값_직선7, 기준값_직선7, 상한공차_직선7, 하한공차_직선7, 편차_직선7,
 측정값_직선8, 기준값_직선8, 상한공차_직선8, 하한공차_직선8, 편차_직선8,
 측정값_점5_X, 기준값_점5_X, 상한공차_점5_X, 하한공차_점5_X, 편차_점5_X,
 측정값_점5_Y, 기준값_점5_Y, 상한공차_점5_Y, 하한공차_점5_Y, 편차_점5_Y,
 측정값_원4_X, 기준값_원4_X, 상한공차_원4_X, 하한공차_원4_X, 편차_원4_X,
 측정값_원4_E_소재_Y, 기준값_원4_E_소재_Y, 상한공차_원4_E_소재_Y, 하한공차_원4_E_소재_Y, 편차_원4_E_소재_Y,
 측정값_원4_E_소재_D, 기준값_원4_E_소재_D, 상한공차_원4_E_소재_D, 하한공차_원4_E_소재_D, 편차_원4_E_소재_D,
 측정값_점6_소재_X, 기준값_점6_소재_X, 상한공차_점6_소재_X, 하한공차_점6_소재_X, 편차_점6_소재_X,
 측정값_점6_소재_Y, 기준값_점6_소재_Y, 상한공차_점6_소재_Y, 하한공차_점6_소재_Y, 편차_점6_소재_Y
 ) = additional_sample_data(num_samples)

# 데이터 프레임 생성
df = pd.DataFrame({
    '측정값_평면1_평면도': 측정값_평면1_평면도1,
    '기준값_평면1_평면도': 기준값_평면1_평면도,
    '상한공차_평면1_평면도': 상한공차_평면1_평면도,
    '하한공차_평면1_평면도': 하한공차_평면1_평면도,
    '편차_평면1_평면도': 편차_평면1_평면도,
    '측정값_평면1_평면도': 측정값_평면1_평면도1,
    '기준값_평면1_평면도': 기준값_평면1_평면도,
    '상한공차_평면1_평면도': 상한공차_평면1_평면도,
    '하한공차_평면1_평면도': 하한공차_평면1_평면도,
    '편차_평면1_평면도': 편차_평면1_평면도,
    '측정값_원1(I)_D': 측정값_원1_I_D,
    '기준값_원1(I)_D': 기준값_원1_I_D,
    '상한공차_원1(I)_D': 상한공차_원1_I_D,
    '하한공차_원1(I)_D': 하한공차_원1_I_D,
    '편차_원1(I)_D': 편차_원1_I_D,
    '측정값_원2(I)_D': 측정값_원2_I_D,
    '기준값_원2(I)_D': 기준값_원2_I_D,
    '상한공차_원2(I)_D': 상한공차_원2_I_D,
    '하한공차_원2(I)_D': 하한공차_원2_I_D,
    '편차_원2(I)_D': 편차_원2_I_D,
    '측정값_원3(I)_D': 측정값_원3_I_D,
    '기준값_원3(I)_D': 기준값_원3_I_D,
    '상한공차_원3(I)_D': 상한공차_원3_I_D,
    '하한공차_원3(I)_D': 하한공차_원3_I_D,
    '편차_원3(I)_D': 편차_원3_I_D,
    '측정값_원통1(I)_D': 측정값_원통1_I_D,
    '기준값_원통1(I)_D': 기준값_원통1_I_D,
    '상한공차_원통1(I)_D': 상한공차_원통1_I_D,
    '하한공차_원통1(I)_D': 하한공차_원통1_I_D,
    '편차_원통1(I)_D': 편차_원통1_I_D,
    '측정값_원통1(I)_직각도': 측정값_원통1_I_직각도,
    '기준값_원통1(I)_직각도': 기준값_원통1_I_직각도,
    '상한공차_원통1(I)_직각도': 상한공차_원통1_I_직각도,
    '하한공차_원통1(I)_직각도': 하한공차_원통1_I_직각도,
    '편차_원통1(I)_직각도': 편차_원통1_I_직각도,
    '측정값_점2_X': 측정값_점2_X,
    '기준값_점2_X': 기준값_점2_X,
    '상한공차_점2_X': 상한공차_점2_X,
    '하한공차_점2_X': 하한공차_점2_X,
    '편차_점2_X': 편차_점2_X,
    '측정값_점2_Y': 측정값_점2_Y,
    '기준값_점2_Y': 기준값_점2_Y,
    '상한공차_점2_Y': 상한공차_점2_Y,
    '하한공차_점2_Y': 하한공차_점2_Y,
    '편차_점2_Y': 편차_점2_Y,
    '측정값_각도1': 측정값_각도1,
    '기준값_각도1': 기준값_각도1,
    '상한공차_각도1': 상한공차_각도1,
    '하한공차_각도1': 하한공차_각도1,
    '편차_각도1': 편차_각도1,
    '측정값_직선4': 측정값_직선4,
    '기준값_직선4': 기준값_직선4,
    '상한공차_직선4': 상한공차_직선4,
    '하한공차_직선4': 하한공차_직선4,
    '편차_직선4': 편차_직선4,
    '측정값_직선5': 측정값_직선5,
    '기준값_직선5': 기준값_직선5,
    '상한공차_직선5': 상한공차_직선5,
    '하한공차_직선5': 하한공차_직선5,
    '편차_직선5': 편차_직선5,
    '측정값_점3': 측정값_점3,
    '기준값_점3': 기준값_점3,
    '상한공차_점3': 상한공차_점3,
    '하한공차_점3': 하한공차_점3,
    '편차_점3': 편차_점3,
    '측정값_직선6': 측정값_직선6,
    '기준값_직선6': 기준값_직선6,
    '상한공차_직선6': 상한공차_직선6,
    '하한공차_직선6': 하한공차_직선6,
    '편차_직선6': 편차_직선6,
    '측정값_점4_X': 측정값_점4_X,
    '기준값_점4_X': 기준값_점4_X,
    '상한공차_점4_X': 상한공차_점4_X,
    '하한공차_점4_X': 하한공차_점4_X,
    '편차_점4_X': 편차_점4_X,
    '측정값_점4_Y': 측정값_점4_Y,
    '기준값_점4_Y': 기준값_점4_Y,
    '상한공차_점4_Y': 상한공차_점4_Y,
    '하한공차_점4_Y': 하한공차_점4_Y,
    '편차_점4_Y': 편차_점4_Y,
    '측정값_직선7': 측정값_직선7,
    '기준값_직선7': 기준값_직선7,
    '상한공차_직선7': 상한공차_직선7,
    '하한공차_직선7': 하한공차_직선7,
    '편차_직선7': 편차_직선7,
    '측정값_직선8': 측정값_직선8,
    '기준값_직선8': 기준값_직선8,
    '상한공차_직선8': 상한공차_직선8,
    '하한공차_직선8': 하한공차_직선8,
    '편차_직선8': 편차_직선8,
    '측정값_점5_X': 측정값_점5_X,
    '기준값_점5_X': 기준값_점5_X,
    '상한공차_점5_X': 상한공차_점5_X,
    '하한공차_점5_X': 하한공차_점5_X,
    '편차_점5_X': 편차_점5_X,
    '측정값_점5_Y': 측정값_점5_Y,
    '기준값_점5_Y': 기준값_점5_Y,
    '상한공차_점5_Y': 상한공차_점5_Y,
    '하한공차_점5_Y': 하한공차_점5_Y,
    '편차_점5_Y': 편차_점5_Y,
    '측정값_원4_X': 측정값_원4_X,
    '기준값_원4_X': 기준값_원4_X,
    '상한공차_원4_X': 상한공차_원4_X,
    '하한공차_원4_X': 하한공차_원4_X,
    '편차_원4_X': 편차_원4_X,
    '측정값_원4(E) <소재>_Y': 측정값_원4_E_소재_Y,
    '기준값_원4(E) <소재>_Y': 기준값_원4_E_소재_Y,
    '상한공차_원4(E) <소재>_Y': 상한공차_원4_E_소재_Y,
    '하한공차_원4(E) <소재>_Y': 하한공차_원4_E_소재_Y,
    '편차_원4(E) <소재>_Y': 편차_원4_E_소재_Y,
    '측정값_원4(E) <소재>_D': 측정값_원4_E_소재_D,
    '기준값_원4(E) <소재>_D': 기준값_원4_E_소재_D,
    '상한공차_원4(E) <소재>_D': 상한공차_원4_E_소재_D,
    '하한공차_원4(E) <소재>_D': 하한공차_원4_E_소재_D,
    '편차_원4(E) <소재>_D': 편차_원4_E_소재_D,
    '측정값_점6 <- 직선9와 직선10의 교차점 <소재>_X': 측정값_점6_소재_X,
    '기준값_점6 <- 직선9와 직선10의 교차점 <소재>_X': 기준값_점6_소재_X,
    '상한공차_점6 <- 직선9와 직선10의 교차점 <소재>_X': 상한공차_점6_소재_X,
    '하한공차_점6 <- 직선9와 직선10의 교차점 <소재>_X': 하한공차_점6_소재_X,
    '편차_점6 <- 직선9와 직선10의 교차점 <소재>_X': 편차_점6_소재_X,
    '측정값_점6 <- 직선9와 직선10의 교차점 <소재>_Y': 측정값_점6_소재_Y,
    '기준값_점6 <- 직선9와 직선10의 교차점 <소재>_Y': 기준값_점6_소재_Y,
    '상한공차_점6 <- 직선9와 직선10의 교차점 <소재>_Y': 상한공차_점6_소재_Y,
    '하한공차_점6 <- 직선9와 직선10의 교차점 <소재>_Y': 하한공차_점6_소재_Y,
    '편차_점6 <- 직선9와 직선10의 교차점 <소재>_Y': 편차_점6_소재_Y,
})

# 데이터 CSV 파일로 저장
file_path = "C:\\git_folder\\CMM_DeepLearning_Module\\MLP\\test\\sample_data4.csv"
df.to_csv(file_path, index=False, encoding='utf-8-sig')